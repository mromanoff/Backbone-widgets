!function(){"use strict";var t={Models:{},Collections:{},Views:{}};t.Models.Account=Backbone.Model.extend({defaults:{accountName:null,allocationValue:null,allocationPercentage:null}}),t.Collections.Accounts=Backbone.Collection.extend({model:t.Models.Account,url:"/api/accounts",initialize:function(){console.log("collection",this.url)},parse:function(t){return t}}),t.Views.Account=Backbone.View.extend({tagName:"li",className:"account",initialize:function(t){this.layout=t.layout},templateList:_.template($("#account-item-list").html()),templateGrid:_.template($("#account-item-grid").html()),render:function(){return this.$el.html(_.isEqual(this.layout,"list")?this.templateList(this.model.toJSON()):this.templateGrid(this.model.toJSON())),this}}),t.Views.Accounts=Backbone.View.extend({el:".accounts",events:{"click button":"toggleView"},initialize:function(){this.collection=new t.Collections.Accounts,this.collection.on("reset",this.render,this),this.collection.fetch({reset:!0})},template:_.template($("#account-list").html()),toggleView:function(t){t.preventDefault(),this.layout=$(t.currentTarget).data("view"),this.$el.toggleClass("list-view grid-view"),this.$el.find("ul").empty(),this.render()},render:function(){var e=[];return this.$el.html(this.template()),this.collection.each(function(i){var l=new t.Views.Account({model:i,layout:this.layout});e.push(l.render().el)},this),this.$el.find("ul").append(e),this}});new t.Views.Accounts}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9hcHAuanMiXSwibmFtZXMiOlsiQXBwIiwiTW9kZWxzIiwiQ29sbGVjdGlvbnMiLCJWaWV3cyIsIkFjY291bnQiLCJCYWNrYm9uZSIsIk1vZGVsIiwiZXh0ZW5kIiwiZGVmYXVsdHMiLCJhY2NvdW50TmFtZSIsImFsbG9jYXRpb25WYWx1ZSIsImFsbG9jYXRpb25QZXJjZW50YWdlIiwiQWNjb3VudHMiLCJDb2xsZWN0aW9uIiwibW9kZWwiLCJ1cmwiLCJpbml0aWFsaXplIiwiY29uc29sZSIsImxvZyIsInRoaXMiLCJwYXJzZSIsInJlc3BvbnNlIiwiVmlldyIsInRhZ05hbWUiLCJjbGFzc05hbWUiLCJvcHRpb25zIiwibGF5b3V0IiwidGVtcGxhdGVMaXN0IiwiXyIsInRlbXBsYXRlIiwiJCIsImh0bWwiLCJ0ZW1wbGF0ZUdyaWQiLCJyZW5kZXIiLCIkZWwiLCJpc0VxdWFsIiwidG9KU09OIiwiZWwiLCJldmVudHMiLCJjbGljayBidXR0b24iLCJjb2xsZWN0aW9uIiwib24iLCJmZXRjaCIsInJlc2V0IiwidG9nZ2xlVmlldyIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImN1cnJlbnRUYXJnZXQiLCJkYXRhIiwidG9nZ2xlQ2xhc3MiLCJmaW5kIiwiZW1wdHkiLCJlYWNoIiwiYWNjb3VudCIsInB1c2giLCJhcHBlbmQiXSwibWFwcGluZ3MiOiJDQUFBLFdBQ0ksWUFFQSxJQUFJQSxJQUNBQyxVQUNBQyxlQUNBQyxTQUdKSCxHQUFJQyxPQUFPRyxRQUFVQyxTQUFTQyxNQUFNQyxRQUNoQ0MsVUFDSUMsWUFBYSxLQUNiQyxnQkFBaUIsS0FDakJDLHFCQUFzQixRQUk5QlgsRUFBSUUsWUFBWVUsU0FBV1AsU0FBU1EsV0FBV04sUUFDM0NPLE1BQU9kLEVBQUlDLE9BQU9HLFFBQ2xCVyxJQUFLLGdCQUVMQyxXQUFZLFdBQ1JDLFFBQVFDLElBQUksYUFBY0MsS0FBS0osTUFHbkNLLE1BQU8sU0FBVUMsR0FFYixNQUFPQSxNQUlmckIsRUFBSUcsTUFBTUMsUUFBVUMsU0FBU2lCLEtBQUtmLFFBQzlCZ0IsUUFBUyxLQUNUQyxVQUFXLFVBQ1hSLFdBQVksU0FBVVMsR0FDbEJOLEtBQUtPLE9BQVNELEVBQVFDLFFBRzFCQyxhQUFjQyxFQUFFQyxTQUFTQyxFQUFFLHNCQUFzQkMsUUFDakRDLGFBQWNKLEVBQUVDLFNBQVNDLEVBQUUsc0JBQXNCQyxRQUNqREUsT0FBUSxXQU1KLE1BSklkLE1BQUtlLElBQUlILEtBRFRILEVBQUVPLFFBQVFoQixLQUFLTyxPQUFRLFFBQ1RQLEtBQUtRLGFBQWFSLEtBQUtMLE1BQU1zQixVQUU3QmpCLEtBQUthLGFBQWFiLEtBQUtMLE1BQU1zQixXQUV4Q2pCLFFBSWZuQixFQUFJRyxNQUFNUyxTQUFXUCxTQUFTaUIsS0FBS2YsUUFDL0I4QixHQUFJLFlBQ0pDLFFBQ0lDLGVBQWdCLGNBR3BCdkIsV0FBWSxXQUNSRyxLQUFLcUIsV0FBYSxHQUFJeEMsR0FBSUUsWUFBWVUsU0FDdENPLEtBQUtxQixXQUFXQyxHQUFHLFFBQVN0QixLQUFLYyxPQUFRZCxNQUN6Q0EsS0FBS3FCLFdBQVdFLE9BQU9DLE9BQU8sS0FHbENkLFNBQVVELEVBQUVDLFNBQVNDLEVBQUUsaUJBQWlCQyxRQUV4Q2EsV0FBWSxTQUFVQyxHQUNsQkEsRUFBRUMsaUJBQ0YzQixLQUFLTyxPQUFTSSxFQUFFZSxFQUFFRSxlQUFlQyxLQUFLLFFBQ3RDN0IsS0FBS2UsSUFBSWUsWUFBWSx1QkFDckI5QixLQUFLZSxJQUFJZ0IsS0FBSyxNQUFNQyxRQUNwQmhDLEtBQUtjLFVBR1RBLE9BQVEsV0FDSixHQUFJRixLQVdKLE9BVkFaLE1BQUtlLElBQUlILEtBQUtaLEtBQUtVLFlBQ25CVixLQUFLcUIsV0FBV1ksS0FBSyxTQUFVdEMsR0FDM0IsR0FBSXVDLEdBQVUsR0FBSXJELEdBQUlHLE1BQU1DLFNBQ3hCVSxNQUFPQSxFQUNQWSxPQUFRUCxLQUFLTyxRQUVqQkssR0FBS3VCLEtBQUtELEVBQVFwQixTQUFTSSxLQUM1QmxCLE1BRUhBLEtBQUtlLElBQUlnQixLQUFLLE1BQU1LLE9BQU94QixHQUNwQlosT0FLTCxJQUFJbkIsR0FBSUcsTUFBTVMiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgQXBwID0ge1xuICAgICAgICBNb2RlbHM6IHt9LFxuICAgICAgICBDb2xsZWN0aW9uczoge30sXG4gICAgICAgIFZpZXdzOiB7fVxuICAgIH07XG5cbiAgICBBcHAuTW9kZWxzLkFjY291bnQgPSBCYWNrYm9uZS5Nb2RlbC5leHRlbmQoe1xuICAgICAgICBkZWZhdWx0czoge1xuICAgICAgICAgICAgYWNjb3VudE5hbWU6IG51bGwsXG4gICAgICAgICAgICBhbGxvY2F0aW9uVmFsdWU6IG51bGwsXG4gICAgICAgICAgICBhbGxvY2F0aW9uUGVyY2VudGFnZTogbnVsbFxuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBBcHAuQ29sbGVjdGlvbnMuQWNjb3VudHMgPSBCYWNrYm9uZS5Db2xsZWN0aW9uLmV4dGVuZCh7XG4gICAgICAgIG1vZGVsOiBBcHAuTW9kZWxzLkFjY291bnQsXG4gICAgICAgIHVybDogJy9hcGkvYWNjb3VudHMnLFxuXG4gICAgICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjb2xsZWN0aW9uJywgdGhpcy51cmwpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHBhcnNlOiBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgIC8vcmV0dXJuIHJlc3BvbnNlLmFsbEFjY291bnRzLnN1YkFjY291bnRzO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBBcHAuVmlld3MuQWNjb3VudCA9IEJhY2tib25lLlZpZXcuZXh0ZW5kKHtcbiAgICAgICAgdGFnTmFtZTogJ2xpJyxcbiAgICAgICAgY2xhc3NOYW1lOiAnYWNjb3VudCcsXG4gICAgICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLmxheW91dCA9IG9wdGlvbnMubGF5b3V0O1xuICAgICAgICB9LFxuXG4gICAgICAgIHRlbXBsYXRlTGlzdDogXy50ZW1wbGF0ZSgkKCcjYWNjb3VudC1pdGVtLWxpc3QnKS5odG1sKCkpLFxuICAgICAgICB0ZW1wbGF0ZUdyaWQ6IF8udGVtcGxhdGUoJCgnI2FjY291bnQtaXRlbS1ncmlkJykuaHRtbCgpKSxcbiAgICAgICAgcmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoXy5pc0VxdWFsKHRoaXMubGF5b3V0LCAnbGlzdCcpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kZWwuaHRtbCh0aGlzLnRlbXBsYXRlTGlzdCh0aGlzLm1vZGVsLnRvSlNPTigpKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuJGVsLmh0bWwodGhpcy50ZW1wbGF0ZUdyaWQodGhpcy5tb2RlbC50b0pTT04oKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIEFwcC5WaWV3cy5BY2NvdW50cyA9IEJhY2tib25lLlZpZXcuZXh0ZW5kKHtcbiAgICAgICAgZWw6ICcuYWNjb3VudHMnLFxuICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgICdjbGljayBidXR0b24nOiAndG9nZ2xlVmlldydcbiAgICAgICAgfSxcblxuICAgICAgICBpbml0aWFsaXplOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLmNvbGxlY3Rpb24gPSBuZXcgQXBwLkNvbGxlY3Rpb25zLkFjY291bnRzKCk7XG4gICAgICAgICAgICB0aGlzLmNvbGxlY3Rpb24ub24oJ3Jlc2V0JywgdGhpcy5yZW5kZXIsIHRoaXMpO1xuICAgICAgICAgICAgdGhpcy5jb2xsZWN0aW9uLmZldGNoKHtyZXNldDogdHJ1ZX0pO1xuICAgICAgICB9LFxuXG4gICAgICAgIHRlbXBsYXRlOiBfLnRlbXBsYXRlKCQoJyNhY2NvdW50LWxpc3QnKS5odG1sKCkpLFxuXG4gICAgICAgIHRvZ2dsZVZpZXc6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLmxheW91dCA9ICQoZS5jdXJyZW50VGFyZ2V0KS5kYXRhKCd2aWV3Jyk7XG4gICAgICAgICAgICB0aGlzLiRlbC50b2dnbGVDbGFzcygnbGlzdC12aWV3IGdyaWQtdmlldycpO1xuICAgICAgICAgICAgdGhpcy4kZWwuZmluZCgndWwnKS5lbXB0eSgpO1xuICAgICAgICAgICAgdGhpcy5yZW5kZXIoKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBodG1sID0gW107XG4gICAgICAgICAgICB0aGlzLiRlbC5odG1sKHRoaXMudGVtcGxhdGUoKSk7XG4gICAgICAgICAgICB0aGlzLmNvbGxlY3Rpb24uZWFjaChmdW5jdGlvbiAobW9kZWwpIHtcbiAgICAgICAgICAgICAgICB2YXIgYWNjb3VudCA9IG5ldyBBcHAuVmlld3MuQWNjb3VudCh7XG4gICAgICAgICAgICAgICAgICAgIG1vZGVsOiBtb2RlbCxcbiAgICAgICAgICAgICAgICAgICAgbGF5b3V0OiB0aGlzLmxheW91dFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGh0bWwucHVzaChhY2NvdW50LnJlbmRlcigpLmVsKTtcbiAgICAgICAgICAgIH0sIHRoaXMpO1xuXG4gICAgICAgICAgICB0aGlzLiRlbC5maW5kKCd1bCcpLmFwcGVuZChodG1sKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBraWNrIHRoZSBhcHBcbiAgICB2YXIgYXBwID0gbmV3IEFwcC5WaWV3cy5BY2NvdW50cygpO1xufSkoKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==